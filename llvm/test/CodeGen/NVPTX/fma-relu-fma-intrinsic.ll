; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -march=nvptx64 -mcpu=sm_80 | FileCheck %s
; RUN: %if ptxas %{ llc < %s -march=nvptx64 -mcpu=sm_80 | %ptxas-verify -arch=sm_80 %}

; Using FTZ should emit fma.ftz.relu
; RUN: llc < %s -denormal-fp-math-f32=preserve-sign -march=nvptx64 -mcpu=sm_80 | FileCheck %s --check-prefixes=CHECK-FTZ
; RUN: %if ptxas %{ llc < %s -denormal-fp-math-f32=preserve-sign -march=nvptx64 -mcpu=sm_80 | %ptxas-verify -arch=sm_80 %}

; SM < 80 or (which needs PTX version >= 70) should not emit fma{.ftz}.relu
; RUN: llc < %s -march=nvptx64 -mcpu=sm_70 | FileCheck %s --check-prefixes=CHECK-SM70

define half @fma_f16_unsafe(half %a, half %b, half %c) #0 {
; CHECK-LABEL: fma_f16_unsafe(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<5>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    ld.param.b16 %rs1, [fma_f16_unsafe_param_0];
; CHECK-NEXT:    ld.param.b16 %rs2, [fma_f16_unsafe_param_1];
; CHECK-NEXT:    ld.param.b16 %rs3, [fma_f16_unsafe_param_2];
; CHECK-NEXT:    fma.rn.relu.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-NEXT:    st.param.b16 [func_retval0], %rs4;
; CHECK-NEXT:    ret;
;
; CHECK-FTZ-LABEL: fma_f16_unsafe(
; CHECK-FTZ:       {
; CHECK-FTZ-NEXT:    .reg .b16 %rs<5>;
; CHECK-FTZ-EMPTY:
; CHECK-FTZ-NEXT:  // %bb.0:
; CHECK-FTZ-NEXT:    ld.param.b16 %rs1, [fma_f16_unsafe_param_0];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs2, [fma_f16_unsafe_param_1];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs3, [fma_f16_unsafe_param_2];
; CHECK-FTZ-NEXT:    fma.rn.ftz.relu.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-FTZ-NEXT:    st.param.b16 [func_retval0], %rs4;
; CHECK-FTZ-NEXT:    ret;
;
; CHECK-SM70-LABEL: fma_f16_unsafe(
; CHECK-SM70:       {
; CHECK-SM70-NEXT:    .reg .b16 %rs<6>;
; CHECK-SM70-NEXT:    .reg .f32 %f<3>;
; CHECK-SM70-EMPTY:
; CHECK-SM70-NEXT:  // %bb.0:
; CHECK-SM70-NEXT:    ld.param.b16 %rs1, [fma_f16_unsafe_param_0];
; CHECK-SM70-NEXT:    ld.param.b16 %rs2, [fma_f16_unsafe_param_1];
; CHECK-SM70-NEXT:    ld.param.b16 %rs3, [fma_f16_unsafe_param_2];
; CHECK-SM70-NEXT:    fma.rn.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-SM70-NEXT:    cvt.f32.f16 %f1, %rs4;
; CHECK-SM70-NEXT:    max.f32 %f2, %f1, 0f00000000;
; CHECK-SM70-NEXT:    cvt.rn.f16.f32 %rs5, %f2;
; CHECK-SM70-NEXT:    st.param.b16 [func_retval0], %rs5;
; CHECK-SM70-NEXT:    ret;
  %1 = call half @llvm.fma.f16(half %a, half %b, half %c)
  %2 = fcmp ogt half %1, 0.0
  %3 = select i1 %2, half %1, half 0.0
  ret half %3
}

; FMA relu shouldn't be selected if the FMA operation has multiple uses
define half @fma_f16_unsafe_multiple_uses_of_fma(half %a, half %b, half %c) #0 {
; CHECK-LABEL: fma_f16_unsafe_multiple_uses_of_fma(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<8>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    ld.param.b16 %rs1, [fma_f16_unsafe_multiple_uses_of_fma_param_0];
; CHECK-NEXT:    ld.param.b16 %rs2, [fma_f16_unsafe_multiple_uses_of_fma_param_1];
; CHECK-NEXT:    ld.param.b16 %rs3, [fma_f16_unsafe_multiple_uses_of_fma_param_2];
; CHECK-NEXT:    fma.rn.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-NEXT:    mov.b16 %rs5, 0x4700;
; CHECK-NEXT:    add.f16 %rs6, %rs4, %rs5;
; CHECK-NEXT:    add.f16 %rs7, %rs6, %rs4;
; CHECK-NEXT:    st.param.b16 [func_retval0], %rs7;
; CHECK-NEXT:    ret;
;
; CHECK-FTZ-LABEL: fma_f16_unsafe_multiple_uses_of_fma(
; CHECK-FTZ:       {
; CHECK-FTZ-NEXT:    .reg .b16 %rs<8>;
; CHECK-FTZ-EMPTY:
; CHECK-FTZ-NEXT:  // %bb.0:
; CHECK-FTZ-NEXT:    ld.param.b16 %rs1, [fma_f16_unsafe_multiple_uses_of_fma_param_0];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs2, [fma_f16_unsafe_multiple_uses_of_fma_param_1];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs3, [fma_f16_unsafe_multiple_uses_of_fma_param_2];
; CHECK-FTZ-NEXT:    fma.rn.ftz.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-FTZ-NEXT:    mov.b16 %rs5, 0x4700;
; CHECK-FTZ-NEXT:    add.ftz.f16 %rs6, %rs4, %rs5;
; CHECK-FTZ-NEXT:    add.ftz.f16 %rs7, %rs6, %rs4;
; CHECK-FTZ-NEXT:    st.param.b16 [func_retval0], %rs7;
; CHECK-FTZ-NEXT:    ret;
;
; CHECK-SM70-LABEL: fma_f16_unsafe_multiple_uses_of_fma(
; CHECK-SM70:       {
; CHECK-SM70-NEXT:    .reg .b16 %rs<8>;
; CHECK-SM70-EMPTY:
; CHECK-SM70-NEXT:  // %bb.0:
; CHECK-SM70-NEXT:    ld.param.b16 %rs1, [fma_f16_unsafe_multiple_uses_of_fma_param_0];
; CHECK-SM70-NEXT:    ld.param.b16 %rs2, [fma_f16_unsafe_multiple_uses_of_fma_param_1];
; CHECK-SM70-NEXT:    ld.param.b16 %rs3, [fma_f16_unsafe_multiple_uses_of_fma_param_2];
; CHECK-SM70-NEXT:    fma.rn.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-SM70-NEXT:    mov.b16 %rs5, 0x4700;
; CHECK-SM70-NEXT:    add.f16 %rs6, %rs4, %rs5;
; CHECK-SM70-NEXT:    add.f16 %rs7, %rs6, %rs4;
; CHECK-SM70-NEXT:    st.param.b16 [func_retval0], %rs7;
; CHECK-SM70-NEXT:    ret;
  %1 = call half @llvm.fma.f16(half %a, half %b, half %c)
  %2 = fcmp ogt half %1, 0.0
  %3 = select i1 %2, half %1, half 0.0
  %4 = fadd half %1, 7.0
  %5 = fadd half %4, %1
  ret half %5
}

define half @fma_f16_maxnum_unsafe(half %a, half %b, half %c) #0 {
; CHECK-LABEL: fma_f16_maxnum_unsafe(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<5>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    ld.param.b16 %rs1, [fma_f16_maxnum_unsafe_param_0];
; CHECK-NEXT:    ld.param.b16 %rs2, [fma_f16_maxnum_unsafe_param_1];
; CHECK-NEXT:    ld.param.b16 %rs3, [fma_f16_maxnum_unsafe_param_2];
; CHECK-NEXT:    fma.rn.relu.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-NEXT:    st.param.b16 [func_retval0], %rs4;
; CHECK-NEXT:    ret;
;
; CHECK-FTZ-LABEL: fma_f16_maxnum_unsafe(
; CHECK-FTZ:       {
; CHECK-FTZ-NEXT:    .reg .b16 %rs<5>;
; CHECK-FTZ-EMPTY:
; CHECK-FTZ-NEXT:  // %bb.0:
; CHECK-FTZ-NEXT:    ld.param.b16 %rs1, [fma_f16_maxnum_unsafe_param_0];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs2, [fma_f16_maxnum_unsafe_param_1];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs3, [fma_f16_maxnum_unsafe_param_2];
; CHECK-FTZ-NEXT:    fma.rn.ftz.relu.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-FTZ-NEXT:    st.param.b16 [func_retval0], %rs4;
; CHECK-FTZ-NEXT:    ret;
;
; CHECK-SM70-LABEL: fma_f16_maxnum_unsafe(
; CHECK-SM70:       {
; CHECK-SM70-NEXT:    .reg .b16 %rs<6>;
; CHECK-SM70-NEXT:    .reg .f32 %f<3>;
; CHECK-SM70-EMPTY:
; CHECK-SM70-NEXT:  // %bb.0:
; CHECK-SM70-NEXT:    ld.param.b16 %rs1, [fma_f16_maxnum_unsafe_param_0];
; CHECK-SM70-NEXT:    ld.param.b16 %rs2, [fma_f16_maxnum_unsafe_param_1];
; CHECK-SM70-NEXT:    ld.param.b16 %rs3, [fma_f16_maxnum_unsafe_param_2];
; CHECK-SM70-NEXT:    fma.rn.f16 %rs4, %rs1, %rs2, %rs3;
; CHECK-SM70-NEXT:    cvt.f32.f16 %f1, %rs4;
; CHECK-SM70-NEXT:    max.f32 %f2, %f1, 0f00000000;
; CHECK-SM70-NEXT:    cvt.rn.f16.f32 %rs5, %f2;
; CHECK-SM70-NEXT:    st.param.b16 [func_retval0], %rs5;
; CHECK-SM70-NEXT:    ret;
  %1 = call half @llvm.fma.f16(half %a, half %b, half %c)
  %2 = call half @llvm.maxnum.f16(half %1, half 0.0)
  ret half %2
}

define bfloat @fma_bf16_unsafe(bfloat %a, bfloat %b, bfloat %c) #0 {
; CHECK-LABEL: fma_bf16_unsafe(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<5>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    ld.param.b16 %rs1, [fma_bf16_unsafe_param_0];
; CHECK-NEXT:    ld.param.b16 %rs2, [fma_bf16_unsafe_param_1];
; CHECK-NEXT:    ld.param.b16 %rs3, [fma_bf16_unsafe_param_2];
; CHECK-NEXT:    fma.rn.relu.bf16 %rs4, %rs1, %rs2, %rs3;
; CHECK-NEXT:    st.param.b16 [func_retval0], %rs4;
; CHECK-NEXT:    ret;
;
; CHECK-FTZ-LABEL: fma_bf16_unsafe(
; CHECK-FTZ:       {
; CHECK-FTZ-NEXT:    .reg .b16 %rs<5>;
; CHECK-FTZ-EMPTY:
; CHECK-FTZ-NEXT:  // %bb.0:
; CHECK-FTZ-NEXT:    ld.param.b16 %rs1, [fma_bf16_unsafe_param_0];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs2, [fma_bf16_unsafe_param_1];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs3, [fma_bf16_unsafe_param_2];
; CHECK-FTZ-NEXT:    fma.rn.ftz.relu.bf16 %rs4, %rs1, %rs2, %rs3;
; CHECK-FTZ-NEXT:    st.param.b16 [func_retval0], %rs4;
; CHECK-FTZ-NEXT:    ret;
;
; CHECK-SM70-LABEL: fma_bf16_unsafe(
; CHECK-SM70:       {
; CHECK-SM70-NEXT:    .reg .pred %p<3>;
; CHECK-SM70-NEXT:    .reg .b16 %rs<3>;
; CHECK-SM70-NEXT:    .reg .b32 %r<20>;
; CHECK-SM70-NEXT:    .reg .f32 %f<7>;
; CHECK-SM70-EMPTY:
; CHECK-SM70-NEXT:  // %bb.0:
; CHECK-SM70-NEXT:    ld.param.u16 %r1, [fma_bf16_unsafe_param_2];
; CHECK-SM70-NEXT:    shl.b32 %r2, %r1, 16;
; CHECK-SM70-NEXT:    mov.b32 %f1, %r2;
; CHECK-SM70-NEXT:    ld.param.u16 %r3, [fma_bf16_unsafe_param_1];
; CHECK-SM70-NEXT:    shl.b32 %r4, %r3, 16;
; CHECK-SM70-NEXT:    mov.b32 %f2, %r4;
; CHECK-SM70-NEXT:    ld.param.u16 %r5, [fma_bf16_unsafe_param_0];
; CHECK-SM70-NEXT:    shl.b32 %r6, %r5, 16;
; CHECK-SM70-NEXT:    mov.b32 %f3, %r6;
; CHECK-SM70-NEXT:    fma.rn.f32 %f4, %f3, %f2, %f1;
; CHECK-SM70-NEXT:    mov.b32 %r7, %f4;
; CHECK-SM70-NEXT:    bfe.u32 %r8, %r7, 16, 1;
; CHECK-SM70-NEXT:    add.s32 %r9, %r8, %r7;
; CHECK-SM70-NEXT:    add.s32 %r10, %r9, 32767;
; CHECK-SM70-NEXT:    setp.nan.f32 %p1, %f4, %f4;
; CHECK-SM70-NEXT:    or.b32 %r11, %r7, 4194304;
; CHECK-SM70-NEXT:    selp.b32 %r12, %r11, %r10, %p1;
; CHECK-SM70-NEXT:    and.b32 %r13, %r12, -65536;
; CHECK-SM70-NEXT:    mov.b32 %f5, %r13;
; CHECK-SM70-NEXT:    max.f32 %f6, %f5, 0f00000000;
; CHECK-SM70-NEXT:    mov.b32 %r14, %f6;
; CHECK-SM70-NEXT:    bfe.u32 %r15, %r14, 16, 1;
; CHECK-SM70-NEXT:    add.s32 %r16, %r15, %r14;
; CHECK-SM70-NEXT:    add.s32 %r17, %r16, 32767;
; CHECK-SM70-NEXT:    setp.nan.f32 %p2, %f6, %f6;
; CHECK-SM70-NEXT:    or.b32 %r18, %r14, 4194304;
; CHECK-SM70-NEXT:    selp.b32 %r19, %r18, %r17, %p2;
; CHECK-SM70-NEXT:    { .reg .b16 tmp; mov.b32 {tmp, %rs1}, %r19; }
; CHECK-SM70-NEXT:    st.param.b16 [func_retval0], %rs1;
; CHECK-SM70-NEXT:    ret;
  %1 = call bfloat @llvm.fma.bf16(bfloat %a, bfloat %b, bfloat %c)
  %2 = fcmp ogt bfloat %1, 0.0
  %3 = select i1 %2, bfloat %1, bfloat 0.0
  ret bfloat %3
}

; FMA_relu shouldn't be selected if the FMA operation has multiple uses
define bfloat @fma_bf16_unsafe_multiple_uses_of_fma(bfloat %a, bfloat %b, bfloat %c) #0 {
; CHECK-LABEL: fma_bf16_unsafe_multiple_uses_of_fma(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<9>;
; CHECK-NEXT:    .reg .b32 %r<5>;
; CHECK-NEXT:    .reg .f32 %f<5>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    ld.param.b16 %rs1, [fma_bf16_unsafe_multiple_uses_of_fma_param_0];
; CHECK-NEXT:    ld.param.b16 %rs2, [fma_bf16_unsafe_multiple_uses_of_fma_param_1];
; CHECK-NEXT:    ld.param.b16 %rs3, [fma_bf16_unsafe_multiple_uses_of_fma_param_2];
; CHECK-NEXT:    fma.rn.bf16 %rs4, %rs1, %rs2, %rs3;
; CHECK-NEXT:    cvt.u32.u16 %r1, %rs4;
; CHECK-NEXT:    shl.b32 %r2, %r1, 16;
; CHECK-NEXT:    mov.b32 %f1, %r2;
; CHECK-NEXT:    add.f32 %f2, %f1, 0f40E00000;
; CHECK-NEXT:    cvt.rn.bf16.f32 %rs6, %f2;
; CHECK-NEXT:    cvt.u32.u16 %r3, %rs6;
; CHECK-NEXT:    shl.b32 %r4, %r3, 16;
; CHECK-NEXT:    mov.b32 %f3, %r4;
; CHECK-NEXT:    add.f32 %f4, %f3, %f1;
; CHECK-NEXT:    cvt.rn.bf16.f32 %rs8, %f4;
; CHECK-NEXT:    st.param.b16 [func_retval0], %rs8;
; CHECK-NEXT:    ret;
;
; CHECK-FTZ-LABEL: fma_bf16_unsafe_multiple_uses_of_fma(
; CHECK-FTZ:       {
; CHECK-FTZ-NEXT:    .reg .b16 %rs<9>;
; CHECK-FTZ-NEXT:    .reg .b32 %r<5>;
; CHECK-FTZ-NEXT:    .reg .f32 %f<5>;
; CHECK-FTZ-EMPTY:
; CHECK-FTZ-NEXT:  // %bb.0:
; CHECK-FTZ-NEXT:    ld.param.b16 %rs1, [fma_bf16_unsafe_multiple_uses_of_fma_param_0];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs2, [fma_bf16_unsafe_multiple_uses_of_fma_param_1];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs3, [fma_bf16_unsafe_multiple_uses_of_fma_param_2];
; CHECK-FTZ-NEXT:    fma.rn.ftz.bf16 %rs4, %rs1, %rs2, %rs3;
; CHECK-FTZ-NEXT:    cvt.u32.u16 %r1, %rs4;
; CHECK-FTZ-NEXT:    shl.b32 %r2, %r1, 16;
; CHECK-FTZ-NEXT:    mov.b32 %f1, %r2;
; CHECK-FTZ-NEXT:    add.ftz.f32 %f2, %f1, 0f40E00000;
; CHECK-FTZ-NEXT:    cvt.rn.bf16.f32 %rs6, %f2;
; CHECK-FTZ-NEXT:    cvt.u32.u16 %r3, %rs6;
; CHECK-FTZ-NEXT:    shl.b32 %r4, %r3, 16;
; CHECK-FTZ-NEXT:    mov.b32 %f3, %r4;
; CHECK-FTZ-NEXT:    add.ftz.f32 %f4, %f3, %f1;
; CHECK-FTZ-NEXT:    cvt.rn.bf16.f32 %rs8, %f4;
; CHECK-FTZ-NEXT:    st.param.b16 [func_retval0], %rs8;
; CHECK-FTZ-NEXT:    ret;
;
; CHECK-SM70-LABEL: fma_bf16_unsafe_multiple_uses_of_fma(
; CHECK-SM70:       {
; CHECK-SM70-NEXT:    .reg .pred %p<4>;
; CHECK-SM70-NEXT:    .reg .b16 %rs<3>;
; CHECK-SM70-NEXT:    .reg .b32 %r<27>;
; CHECK-SM70-NEXT:    .reg .f32 %f<9>;
; CHECK-SM70-EMPTY:
; CHECK-SM70-NEXT:  // %bb.0:
; CHECK-SM70-NEXT:    ld.param.u16 %r1, [fma_bf16_unsafe_multiple_uses_of_fma_param_2];
; CHECK-SM70-NEXT:    shl.b32 %r2, %r1, 16;
; CHECK-SM70-NEXT:    mov.b32 %f1, %r2;
; CHECK-SM70-NEXT:    ld.param.u16 %r3, [fma_bf16_unsafe_multiple_uses_of_fma_param_1];
; CHECK-SM70-NEXT:    shl.b32 %r4, %r3, 16;
; CHECK-SM70-NEXT:    mov.b32 %f2, %r4;
; CHECK-SM70-NEXT:    ld.param.u16 %r5, [fma_bf16_unsafe_multiple_uses_of_fma_param_0];
; CHECK-SM70-NEXT:    shl.b32 %r6, %r5, 16;
; CHECK-SM70-NEXT:    mov.b32 %f3, %r6;
; CHECK-SM70-NEXT:    fma.rn.f32 %f4, %f3, %f2, %f1;
; CHECK-SM70-NEXT:    mov.b32 %r7, %f4;
; CHECK-SM70-NEXT:    bfe.u32 %r8, %r7, 16, 1;
; CHECK-SM70-NEXT:    add.s32 %r9, %r8, %r7;
; CHECK-SM70-NEXT:    add.s32 %r10, %r9, 32767;
; CHECK-SM70-NEXT:    setp.nan.f32 %p1, %f4, %f4;
; CHECK-SM70-NEXT:    or.b32 %r11, %r7, 4194304;
; CHECK-SM70-NEXT:    selp.b32 %r12, %r11, %r10, %p1;
; CHECK-SM70-NEXT:    and.b32 %r13, %r12, -65536;
; CHECK-SM70-NEXT:    mov.b32 %f5, %r13;
; CHECK-SM70-NEXT:    add.f32 %f6, %f5, 0f40E00000;
; CHECK-SM70-NEXT:    mov.b32 %r14, %f6;
; CHECK-SM70-NEXT:    bfe.u32 %r15, %r14, 16, 1;
; CHECK-SM70-NEXT:    add.s32 %r16, %r15, %r14;
; CHECK-SM70-NEXT:    add.s32 %r17, %r16, 32767;
; CHECK-SM70-NEXT:    setp.nan.f32 %p2, %f6, %f6;
; CHECK-SM70-NEXT:    or.b32 %r18, %r14, 4194304;
; CHECK-SM70-NEXT:    selp.b32 %r19, %r18, %r17, %p2;
; CHECK-SM70-NEXT:    and.b32 %r20, %r19, -65536;
; CHECK-SM70-NEXT:    mov.b32 %f7, %r20;
; CHECK-SM70-NEXT:    add.f32 %f8, %f7, %f5;
; CHECK-SM70-NEXT:    mov.b32 %r21, %f8;
; CHECK-SM70-NEXT:    bfe.u32 %r22, %r21, 16, 1;
; CHECK-SM70-NEXT:    add.s32 %r23, %r22, %r21;
; CHECK-SM70-NEXT:    add.s32 %r24, %r23, 32767;
; CHECK-SM70-NEXT:    setp.nan.f32 %p3, %f8, %f8;
; CHECK-SM70-NEXT:    or.b32 %r25, %r21, 4194304;
; CHECK-SM70-NEXT:    selp.b32 %r26, %r25, %r24, %p3;
; CHECK-SM70-NEXT:    { .reg .b16 tmp; mov.b32 {tmp, %rs1}, %r26; }
; CHECK-SM70-NEXT:    st.param.b16 [func_retval0], %rs1;
; CHECK-SM70-NEXT:    ret;
  %1 = call bfloat @llvm.fma.bf16(bfloat %a, bfloat %b, bfloat %c)
  %2 = fcmp ogt bfloat %1, 0.0
  %3 = select i1 %2, bfloat %1, bfloat 0.0
  %4 = fadd bfloat %1, 7.0
  %5 = fadd bfloat %4, %1
  ret bfloat %5
}

define bfloat @fma_bf16_maxnum_unsafe(bfloat %a, bfloat %b, bfloat %c) #0 {
; CHECK-LABEL: fma_bf16_maxnum_unsafe(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<5>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    ld.param.b16 %rs1, [fma_bf16_maxnum_unsafe_param_0];
; CHECK-NEXT:    ld.param.b16 %rs2, [fma_bf16_maxnum_unsafe_param_1];
; CHECK-NEXT:    ld.param.b16 %rs3, [fma_bf16_maxnum_unsafe_param_2];
; CHECK-NEXT:    fma.rn.relu.bf16 %rs4, %rs1, %rs2, %rs3;
; CHECK-NEXT:    st.param.b16 [func_retval0], %rs4;
; CHECK-NEXT:    ret;
;
; CHECK-FTZ-LABEL: fma_bf16_maxnum_unsafe(
; CHECK-FTZ:       {
; CHECK-FTZ-NEXT:    .reg .b16 %rs<5>;
; CHECK-FTZ-EMPTY:
; CHECK-FTZ-NEXT:  // %bb.0:
; CHECK-FTZ-NEXT:    ld.param.b16 %rs1, [fma_bf16_maxnum_unsafe_param_0];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs2, [fma_bf16_maxnum_unsafe_param_1];
; CHECK-FTZ-NEXT:    ld.param.b16 %rs3, [fma_bf16_maxnum_unsafe_param_2];
; CHECK-FTZ-NEXT:    fma.rn.ftz.relu.bf16 %rs4, %rs1, %rs2, %rs3;
; CHECK-FTZ-NEXT:    st.param.b16 [func_retval0], %rs4;
; CHECK-FTZ-NEXT:    ret;
;
; CHECK-SM70-LABEL: fma_bf16_maxnum_unsafe(
; CHECK-SM70:       {
; CHECK-SM70-NEXT:    .reg .pred %p<3>;
; CHECK-SM70-NEXT:    .reg .b16 %rs<3>;
; CHECK-SM70-NEXT:    .reg .b32 %r<20>;
; CHECK-SM70-NEXT:    .reg .f32 %f<7>;
; CHECK-SM70-EMPTY:
; CHECK-SM70-NEXT:  // %bb.0:
; CHECK-SM70-NEXT:    ld.param.u16 %r1, [fma_bf16_maxnum_unsafe_param_2];
; CHECK-SM70-NEXT:    shl.b32 %r2, %r1, 16;
; CHECK-SM70-NEXT:    mov.b32 %f1, %r2;
; CHECK-SM70-NEXT:    ld.param.u16 %r3, [fma_bf16_maxnum_unsafe_param_1];
; CHECK-SM70-NEXT:    shl.b32 %r4, %r3, 16;
; CHECK-SM70-NEXT:    mov.b32 %f2, %r4;
; CHECK-SM70-NEXT:    ld.param.u16 %r5, [fma_bf16_maxnum_unsafe_param_0];
; CHECK-SM70-NEXT:    shl.b32 %r6, %r5, 16;
; CHECK-SM70-NEXT:    mov.b32 %f3, %r6;
; CHECK-SM70-NEXT:    fma.rn.f32 %f4, %f3, %f2, %f1;
; CHECK-SM70-NEXT:    mov.b32 %r7, %f4;
; CHECK-SM70-NEXT:    bfe.u32 %r8, %r7, 16, 1;
; CHECK-SM70-NEXT:    add.s32 %r9, %r8, %r7;
; CHECK-SM70-NEXT:    add.s32 %r10, %r9, 32767;
; CHECK-SM70-NEXT:    setp.nan.f32 %p1, %f4, %f4;
; CHECK-SM70-NEXT:    or.b32 %r11, %r7, 4194304;
; CHECK-SM70-NEXT:    selp.b32 %r12, %r11, %r10, %p1;
; CHECK-SM70-NEXT:    and.b32 %r13, %r12, -65536;
; CHECK-SM70-NEXT:    mov.b32 %f5, %r13;
; CHECK-SM70-NEXT:    max.f32 %f6, %f5, 0f00000000;
; CHECK-SM70-NEXT:    mov.b32 %r14, %f6;
; CHECK-SM70-NEXT:    bfe.u32 %r15, %r14, 16, 1;
; CHECK-SM70-NEXT:    add.s32 %r16, %r15, %r14;
; CHECK-SM70-NEXT:    add.s32 %r17, %r16, 32767;
; CHECK-SM70-NEXT:    setp.nan.f32 %p2, %f6, %f6;
; CHECK-SM70-NEXT:    or.b32 %r18, %r14, 4194304;
; CHECK-SM70-NEXT:    selp.b32 %r19, %r18, %r17, %p2;
; CHECK-SM70-NEXT:    { .reg .b16 tmp; mov.b32 {tmp, %rs1}, %r19; }
; CHECK-SM70-NEXT:    st.param.b16 [func_retval0], %rs1;
; CHECK-SM70-NEXT:    ret;
  %1 = call bfloat @llvm.fma.bf16(bfloat %a, bfloat %b, bfloat %c)
  %2 = call bfloat @llvm.maxnum.bf16(bfloat %1, bfloat 0.0)
  ret bfloat %2
}

attributes #0 = { "unsafe-fp-math"="true" }
